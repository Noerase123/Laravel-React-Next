{"ast":null,"code":"var __jsx = React.createElement;\nimport Link from 'next/link';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport CreateButton from '../../components/Create';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    minHeight: 600\n  }\n});\nexport default function table(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const create = {\n    fields: ['Building Name', 'Building Type', 'Capacity', 'Vacancy', 'Occupancy'],\n    title: 'Building',\n    //helperTxt: 'Fill up details',\n    helperTxt: ''\n  };\n  return __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true\n  }, props.title), __jsx(\"br\", null), __jsx(CreateButton, {\n    fields: create.fields,\n    title: create.title,\n    helperTxt: create.helperTxt\n  }), __jsx(\"br\", null), __jsx(Paper, {\n    className: classes.root\n  }, __jsx(TableContainer, {\n    className: classes.container\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\"\n  }, __jsx(TableHead, null, __jsx(TableRow, null, props.columns.map(column => __jsx(TableCell, {\n    key: column\n  }, column)))), __jsx(TableBody, null, props.rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return __jsx(Link, {\n      href: `buildings?details=${row.name}`\n    }, __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.name,\n      onClick: () => console.log(row.name)\n    }, __jsx(TableCell, null, row.name), __jsx(TableCell, null, row.type), __jsx(TableCell, null, row.capacity), __jsx(TableCell, null, row.occupancy), __jsx(TableCell, null, row.vacancy)));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: props.rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}