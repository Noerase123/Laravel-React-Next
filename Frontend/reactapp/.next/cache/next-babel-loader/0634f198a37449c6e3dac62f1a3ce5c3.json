{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IT PC\\\\Desktop\\\\Laravel-React-Next\\\\Frontend\\\\reactapp\\\\src\\\\components\\\\table.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'type',\n  label: 'Type',\n  minWidth: 100\n}, {\n  id: 'capacity',\n  label: 'Capacity',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'vacancy',\n  label: 'Vacancy',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'occupancy',\n  label: 'Occupancy',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(name, type, capacity, vacancy, occupancy) {\n  return {\n    name,\n    type,\n    capacity,\n    vacancy,\n    occupancy\n  };\n}\n\nconst rows = [createData('Amsterdam', 'First Class', 100, 30, 70), createData('Athens', 'Deluxe', 100, 30, 70), createData('Hong Kong', 'Deluxe', 100, 30, 70), createData('Rio', 'Deluxe', 100, 30, 70), createData('Paris', 'Deluxe', 100, 30, 70), createData('Sydney', 'First Class', 100, 30, 70), createData('Auckland', 'First Class', 100, 30, 70), createData('Seoul', 'Deluxe', 100, 30, 70), createData('Tokyo', 'Deluxe', 100, 30, 70), createData('Kyoto', 'Deluxe', 100, 30, 70), createData('New York', 'First Class', 100, 30, 70), createData('Singapore', 'Deluxe', 100, 30, 70), createData('London', 'Deluxe', 100, 30, 70)];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    minHeight: 600\n  }\n});\nexport default function table() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return __jsx(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, __jsx(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, columns.map(column => __jsx(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, column.label)))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 23\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/IT PC/Desktop/Laravel-React-Next/Frontend/reactapp/src/components/table.tsx"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","type","capacity","vacancy","occupancy","rows","useStyles","root","width","container","minHeight","table","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAWA,MAAMC,OAAiB,GAAG,CACxB;AAAEC,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE,MAArB;AAA6BC,EAAAA,QAAQ,EAAE;AAAvC,CADwB,EAExB;AAAEF,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE,MAArB;AAA6BC,EAAAA,QAAQ,EAAE;AAAvC,CAFwB,EAGxB;AACEF,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE,OAJT;AAKEC,EAAAA,MAAM,EAAGC,KAAD,IAAmBA,KAAK,CAACC,cAAN,CAAqB,OAArB;AAL7B,CAHwB,EAUxB;AACEN,EAAAA,EAAE,EAAE,SADN;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE,OAJT;AAKEC,EAAAA,MAAM,EAAGC,KAAD,IAAmBA,KAAK,CAACC,cAAN,CAAqB,OAArB;AAL7B,CAVwB,EAiBxB;AACEN,EAAAA,EAAE,EAAE,WADN;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE,OAJT;AAKEC,EAAAA,MAAM,EAAGC,KAAD,IAAmBA,KAAK,CAACE,OAAN,CAAc,CAAd;AAL7B,CAjBwB,CAA1B;;AAkCA,SAASC,UAAT,CAAoBC,IAApB,EAAkCC,IAAlC,EAAgDC,QAAhD,EAAkEC,OAAlE,EAAmFC,SAAnF,EAA4G;AAC1G,SAAO;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,GAAP;AACD;;AAED,MAAMC,IAAI,GAAG,CACXN,UAAU,CAAC,WAAD,EAAa,aAAb,EAA4B,GAA5B,EAAgC,EAAhC,EAAmC,EAAnC,CADC,EAEXA,UAAU,CAAC,QAAD,EAAU,QAAV,EAAoB,GAApB,EAAwB,EAAxB,EAA2B,EAA3B,CAFC,EAGXA,UAAU,CAAC,WAAD,EAAa,QAAb,EAAuB,GAAvB,EAA2B,EAA3B,EAA8B,EAA9B,CAHC,EAIXA,UAAU,CAAC,KAAD,EAAO,QAAP,EAAiB,GAAjB,EAAqB,EAArB,EAAwB,EAAxB,CAJC,EAKXA,UAAU,CAAC,OAAD,EAAS,QAAT,EAAmB,GAAnB,EAAuB,EAAvB,EAA0B,EAA1B,CALC,EAMXA,UAAU,CAAC,QAAD,EAAU,aAAV,EAAyB,GAAzB,EAA6B,EAA7B,EAAgC,EAAhC,CANC,EAOXA,UAAU,CAAC,UAAD,EAAY,aAAZ,EAA2B,GAA3B,EAA+B,EAA/B,EAAkC,EAAlC,CAPC,EAQXA,UAAU,CAAC,OAAD,EAAS,QAAT,EAAmB,GAAnB,EAAuB,EAAvB,EAA0B,EAA1B,CARC,EASXA,UAAU,CAAC,OAAD,EAAS,QAAT,EAAmB,GAAnB,EAAuB,EAAvB,EAA0B,EAA1B,CATC,EAUXA,UAAU,CAAC,OAAD,EAAS,QAAT,EAAmB,GAAnB,EAAuB,EAAvB,EAA0B,EAA1B,CAVC,EAWXA,UAAU,CAAC,UAAD,EAAY,aAAZ,EAA2B,GAA3B,EAA+B,EAA/B,EAAkC,EAAlC,CAXC,EAYXA,UAAU,CAAC,WAAD,EAAa,QAAb,EAAuB,GAAvB,EAA2B,EAA3B,EAA8B,EAA9B,CAZC,EAaXA,UAAU,CAAC,QAAD,EAAU,QAAV,EAAoB,GAApB,EAAwB,EAAxB,EAA2B,EAA3B,CAbC,CAAb;AAgBA,MAAMO,SAAS,GAAGzB,UAAU,CAAC;AAC3B0B,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADqB;AAI3BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AAJgB,CAAD,CAA5B;AAeA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBlC,KAAK,CAACmC,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrC,KAAK,CAACmC,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAiBC,OAAjB,KAAqC;AAC5DN,IAAAA,OAAO,CAACM,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIF,KAAD,IAAgD;AAC9EF,IAAAA,cAAc,CAAC,CAACE,KAAK,CAACG,MAAN,CAAa1B,KAAf,CAAd;AACAkB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,SACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,OAAO,CAACL,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAEK,OAAO,CAACH,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,YAAY,MAAnB;AAAoB,kBAAW,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,OAAO,CAACiC,GAAR,CAAaC,MAAD,IACX,MAAC,SAAD;AACE,IAAA,GAAG,EAAEA,MAAM,CAACjC,EADd;AAEE,IAAA,KAAK,EAAEiC,MAAM,CAAC9B,KAFhB;AAGE,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAAE+B,MAAM,CAAC/B;AAAnB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG+B,MAAM,CAAChC,KALV,CADD,CADH,CADF,CADF,EAcE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,IAAI,CAACoB,KAAL,CAAWZ,IAAI,GAAGG,WAAlB,EAA+BH,IAAI,GAAGG,WAAP,GAAqBA,WAApD,EAAiEO,GAAjE,CAAsEG,GAAD,IAAS;AAC7E,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,MAAf;AAAgB,MAAA,IAAI,EAAC,UAArB;AAAgC,MAAA,QAAQ,EAAE,CAAC,CAA3C;AAA8C,MAAA,GAAG,EAAEA,GAAG,CAAC1B,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,OAAO,CAACiC,GAAR,CAAaC,MAAD,IAAY;AACvB,YAAM5B,KAAK,GAAG8B,GAAG,CAACF,MAAM,CAACjC,EAAR,CAAjB;AACA,aACE,MAAC,SAAD;AAAW,QAAA,GAAG,EAAEiC,MAAM,CAACjC,EAAvB;AAA2B,QAAA,KAAK,EAAEiC,MAAM,CAAC9B,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG8B,MAAM,CAAC7B,MAAP,IAAiB,OAAOC,KAAP,KAAiB,QAAlC,GAA6C4B,MAAM,CAAC7B,MAAP,CAAcC,KAAd,CAA7C,GAAoEA,KADvE,CADF;AAKD,KAPA,CADH,CADF;AAYD,GAbA,CADH,CAdF,CADF,CADF,EAkCE,MAAC,eAAD;AACE,IAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CADtB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,KAAK,EAAES,IAAI,CAACsB,MAHd;AAIE,IAAA,WAAW,EAAEX,WAJf;AAKE,IAAA,IAAI,EAAEH,IALR;AAME,IAAA,YAAY,EAAEK,gBANhB;AAOE,IAAA,mBAAmB,EAAEG,uBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CADF;AA8CD","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\ninterface Column {\r\n  \r\n  id: 'name' | 'type' | 'capacity' | 'vacancy' | 'occupancy';\r\n  label: string;\r\n  minWidth?: number;\r\n  align?: 'right';\r\n  format?: (value: number) => string;\r\n}\r\n\r\nconst columns: Column[] = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'type', label: 'Type', minWidth: 100 },\r\n  {\r\n    id: 'capacity',\r\n    label: 'Capacity',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'vacancy',\r\n    label: 'Vacancy',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'occupancy',\r\n    label: 'Occupancy',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toFixed(2),\r\n  },\r\n];\r\n\r\ninterface Data {\r\n  name: string;\r\n  type: string;\r\n  capacity: number;\r\n  vacancy: number;\r\n  occupancy: number;\r\n}\r\n\r\nfunction createData(name: string, type: string, capacity: number, vacancy: number, occupancy: number): Data {\r\n  return { name, type, capacity, vacancy, occupancy };\r\n}\r\n\r\nconst rows = [\r\n  createData('Amsterdam','First Class', 100,30,70),\r\n  createData('Athens','Deluxe', 100,30,70),\r\n  createData('Hong Kong','Deluxe', 100,30,70),\r\n  createData('Rio','Deluxe', 100,30,70),\r\n  createData('Paris','Deluxe', 100,30,70),\r\n  createData('Sydney','First Class', 100,30,70),\r\n  createData('Auckland','First Class', 100,30,70),\r\n  createData('Seoul','Deluxe', 100,30,70),\r\n  createData('Tokyo','Deluxe', 100,30,70),\r\n  createData('Kyoto','Deluxe', 100,30,70),\r\n  createData('New York','First Class', 100,30,70),\r\n  createData('Singapore','Deluxe', 100,30,70),\r\n  createData('London','Deluxe', 100,30,70),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: 600,\r\n  },\r\n});\r\n\r\ninterface Itable {\r\n  title: string\r\n  interface: Interface\r\n  columns: Array\r\n}\r\n\r\nexport default function table() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}