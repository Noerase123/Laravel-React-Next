{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs';\nimport PersonIcon from '@material-ui/icons/Person';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paperModal: {\n    backgroundColor: theme.palette.background.paper,\n    minWidth: 800,\n    minHeight: 500,\n    padding: 20\n  }\n}));\nexport default function TenantDetails(props) {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3\n  }, props.tenants.map(res => __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Paper, {\n    className: classes.paper\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 3\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      backgroundColor: '#dedede'\n    }\n  }, __jsx(SpringModal, {\n    tenant: res\n  }, __jsx(Avatar, {\n    style: {\n      float: 'left'\n    },\n    alt: res.bed,\n    src: \"/static/images/avatar/1.jpg\"\n  })), __jsx(\"div\", null, __jsx(Typography, {\n    style: {\n      color: '#000'\n    }\n  }, res.name), __jsx(Typography, {\n    color: \"inherit\"\n  }, res.email))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      textAlign: 'left'\n    }\n  }, __jsx(\"div\", null, __jsx(Typography, null, \"Bed Rate : \", res.rentalRate), __jsx(Typography, null, \"Move In: \", res.moveIn), __jsx(Typography, null, \"Move Out: \", res.moveOut)))))))));\n}\nconst Fade = /*#__PURE__*/React.forwardRef(function Fade(props, ref) {\n  const {\n    in: open,\n    children,\n    onEnter,\n    onExited\n  } = props,\n        other = _objectWithoutProperties(props, [\"in\", \"children\", \"onEnter\", \"onExited\"]);\n\n  const style = useSpring({\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: open ? 1 : 0\n    },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    }\n  });\n  return __jsx(animated.div, _extends({\n    ref: ref,\n    style: style\n  }, other), children);\n});\nexport function SpringModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const name = props.tenant.name;\n  const contactNum = props.tenant.contactNum;\n  const email = props.tenant.email;\n  const city = props.tenant.city;\n  const province = props.tenant.province;\n  const houseNum = props.tenant.houseNum;\n  const company = props.tenant.company;\n  const occupation = props.tenant.occupation;\n  const arrData = [name, contactNum, email, city];\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    onClick: handleOpen\n  }, props.children), __jsx(Modal, {\n    \"aria-labelledby\": \"spring-modal-title\",\n    \"aria-describedby\": \"spring-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    }\n  }, __jsx(Fade, {\n    in: open\n  }, __jsx(\"div\", {\n    className: classes.paperModal\n  }, __jsx(Grid, {\n    container: true,\n    xs: 12\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      backgroundColor: '#e1e1e1',\n      padding: 15\n    }\n  }, __jsx(PersonIcon, {\n    style: {\n      height: '100%',\n      width: '100%',\n      display: 'block',\n      backgroundColor: '#fefefe'\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    style: {\n      backgroundColor: '#cdcdcd',\n      padding: 30\n    }\n  }, arrData.map(response => __jsx(\"div\", null, __jsx(Typography, null, response))))), __jsx(\"br\", null), __jsx(Grid, {\n    xs: 12\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: '#808080'\n    }\n  }, __jsx(Typography, {\n    variant: \"overline\",\n    display: \"block\",\n    style: {\n      padding: 10,\n      color: '#fff'\n    },\n    gutterBottom: true\n  }, \"Basic Information\")), __jsx(\"div\", {\n    style: {\n      backgroundColor: '#e1e1e1',\n      height: 300,\n      overflow: 'scroll'\n    }\n  }))))));\n}","map":null,"metadata":{},"sourceType":"module"}