{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport CreateButton from '../../components/Create';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Grid from '@material-ui/core/Grid';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Modal from '@material-ui/core/Modal';\nimport { useSpring, animated } from 'react-spring/web.cjs';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { Button } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      width: '100%'\n    },\n    container: {\n      minHeight: 600\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paperModal: {\n      backgroundColor: theme.palette.background.paper,\n      minWidth: 400,\n      minHeight: 250,\n      padding: 20\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    }\n  });\n});\nexport default function table(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      open = _React$useState6[0],\n      setOpen = _React$useState6[1];\n\n  var closeSnackbar = function closeSnackbar() {\n    setOpen(false);\n  };\n\n  var openSnackbar = function openSnackbar() {\n    setOpen(true);\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  var create = {\n    fields: ['Building', 'Room Number', 'Room Type', 'Capacity Range'],\n    title: 'Room',\n    //helperTxt: 'Fill up details',\n    helperTxt: ''\n  };\n  return __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true\n  }, props.title), __jsx(\"br\", null), __jsx(CreateButton, {\n    fields: create.fields,\n    title: create.title,\n    helperTxt: create.helperTxt\n  }), __jsx(\"br\", null), __jsx(Paper, {\n    className: classes.root\n  }, __jsx(TableContainer, {\n    className: classes.container\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\"\n  }, __jsx(TableHead, null, __jsx(TableRow, null, props.columns.map(function (column) {\n    return __jsx(TableCell, {\n      key: column\n    }, column);\n  }), __jsx(TableCell, null, \"Option\"))), __jsx(TableBody, null, props.rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.id\n    }, __jsx(TableCell, null, row.bldg), __jsx(TableCell, null, row.number), __jsx(TableCell, null, row.type), __jsx(TableCell, null, row.percentageCapacity), __jsx(TableCell, null, __jsx(Link, {\n      href: \"units?v=\".concat(row.id, \"&building=\").concat(row.bldg, \"&unit=\").concat(row.number)\n    }, __jsx(VisibilityIcon, null)), __jsx(RoomSetting, {\n      title: \"\".concat(row.bldg, \" \").concat(row.number, \"'s\")\n    }, __jsx(SettingsApplicationsIcon, null))));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: props.rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  })));\n}\nvar Fade = /*#__PURE__*/React.forwardRef(function Fade(props, ref) {\n  var open = props.in,\n      children = props.children,\n      onEnter = props.onEnter,\n      onExited = props.onExited,\n      other = _objectWithoutProperties(props, [\"in\", \"children\", \"onEnter\", \"onExited\"]);\n\n  var style = useSpring({\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: open ? 1 : 0\n    },\n    onStart: function onStart() {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: function onRest() {\n      if (!open && onExited) {\n        onExited();\n      }\n    }\n  });\n  return __jsx(animated.div, _extends({\n    ref: ref,\n    style: style\n  }, other), children);\n});\n\nfunction RoomSetting(props) {\n  var classes = useStyles();\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      open = _React$useState8[0],\n      setOpen = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      age = _React$useState10[0],\n      setAge = _React$useState10[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleChange = function handleChange(event) {\n    setAge(event.target.value);\n  };\n\n  return __jsx(\"div\", null, __jsx(\"span\", {\n    onClick: handleOpen\n  }, props.children), __jsx(Modal, {\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    }\n  }, __jsx(Fade, {\n    in: open\n  }, __jsx(\"div\", {\n    className: classes.paperModal\n  }, __jsx(Typography, {\n    variant: \"h5\"\n  }, props.title, \" settings\"), __jsx(\"br\", null), __jsx(Grid, {\n    container: true,\n    xs: 12\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(Paper, {\n    style: {\n      minHeight: 88\n    }\n  }, __jsx(Typography, null, \"Change of Rooms\"), __jsx(FormControl, {\n    className: classes.formControl\n  }, __jsx(InputLabel, null, \"Rooms\"), __jsx(Select, {\n    value: age,\n    onChange: handleChange\n  }, __jsx(MenuItem, {\n    value: 10\n  }, \"Ten\"), __jsx(MenuItem, {\n    value: 20\n  }, \"Twenty\"), __jsx(MenuItem, {\n    value: 30\n  }, \"Thirty\"))))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(Paper, {\n    style: {\n      minHeight: 88\n    }\n  }, __jsx(Typography, null, \"Number of Rooms\"), __jsx(\"br\", null), __jsx(Typography, null, age))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"br\", null), __jsx(\"div\", {\n    style: {\n      float: 'right'\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    style: {\n      marginRight: 10\n    },\n    onClick: handleClose\n  }, \"Cancel\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClose\n  }, \"Save\"))))))));\n}","map":null,"metadata":{},"sourceType":"module"}