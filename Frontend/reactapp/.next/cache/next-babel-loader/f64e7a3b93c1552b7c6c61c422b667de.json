{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IT PC\\\\Desktop\\\\Laravel-React-Next\\\\Frontend\\\\reactapp\\\\src\\\\components\\\\table.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, useTheme, createStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nconst useStyles1 = makeStyles(theme => createStyles({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  _s();\n\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onChangePage\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? __jsx(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 38\n    }\n  }) : __jsx(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 57\n    }\n  })), __jsx(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? __jsx(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 38\n    }\n  }) : __jsx(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 63\n    }\n  })), __jsx(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? __jsx(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 38\n    }\n  }) : __jsx(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 62\n    }\n  })), __jsx(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? __jsx(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 38\n    }\n  }) : __jsx(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 58\n    }\n  })));\n}\n\n_s(TablePaginationActions, \"KqsuGf3FnFNq6eN80CYbjOwL8vo=\", false, function () {\n  return [useStyles1, useTheme];\n});\n\n_c = TablePaginationActions;\n\nfunction createData(name, calories, fat) {\n  return {\n    name,\n    calories,\n    fat\n  };\n}\n\nconst rows = [createData('Cupcake', 305, 3.7), createData('Donut', 452, 25.0), createData('Eclair', 262, 16.0), createData('Frozen yoghurt', 159, 6.0), createData('Gingerbread', 356, 16.0), createData('Honeycomb', 408, 3.2), createData('Ice cream sandwich', 237, 9.0), createData('Jelly Bean', 375, 0.0), createData('KitKat', 518, 26.0), createData('Lollipop', 392, 0.2), createData('Marshmallow', 318, 0), createData('Nougat', 360, 19.0), createData('Oreo', 437, 18.0)].sort((a, b) => a.calories < b.calories ? -1 : 1);\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500\n  }\n});\nexport default function table() {\n  _s2();\n\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return __jsx(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"custom pagination table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => __jsx(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, row.name), __jsx(TableCell, {\n    style: {\n      width: 160\n    },\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, row.calories), __jsx(TableCell, {\n    style: {\n      width: 160\n    },\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, row.fat))), emptyRows > 0 && __jsx(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, __jsx(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }))), __jsx(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s2(table, \"N7xAgYYZoaGkWr+XDiFUaQf3IRk=\", false, function () {\n  return [useStyles2];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TablePaginationActions\");","map":{"version":3,"sources":["C:/Users/IT PC/Desktop/Laravel-React-Next/Frontend/reactapp/src/components/table.tsx"],"names":["React","makeStyles","useTheme","createStyles","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","useStyles1","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","createData","name","calories","fat","rows","sort","a","b","useStyles2","table","minWidth","setPage","useState","setRowsPerPage","emptyRows","min","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","row","width","height","label","inputProps","native"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface TablePaginationActionsProps {\r\n  count: number;\r\n  page: number;\r\n  rowsPerPage: number;\r\n  onChangePage: (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => void;\r\n}\r\n\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction createData(name: string, calories: number, fat: number) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function table() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.calories}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.fat}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}