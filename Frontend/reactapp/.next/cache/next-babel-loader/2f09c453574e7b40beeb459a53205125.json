{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Desktop/PHP PROJECTS/Laravel-React-Next/Frontend/reactapp/src/components/table.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n// interface Column {\n//   id: number;\n//   label: string;\n//   minWidth?: number;\n//   align?: 'right';\n//   format?: (value: number) => string;\n// }\n// const columns: Column[] = [\n//   { id: 1, label: 'Name', minWidth: 170 },\n//   { id: 2, label: 'Type', minWidth: 100 },\n//   {\n//     id: 3,\n//     label: 'Capacity',\n//     minWidth: 170,\n//     align: 'right',\n//     format: (value: number) => value.toLocaleString('en-US'),\n//   },\n//   {\n//     id: 4,\n//     label: 'Vacancy',\n//     minWidth: 170,\n//     align: 'right',\n//     format: (value: number) => value.toLocaleString('en-US'),\n//   },\n//   {\n//     id: 5,\n//     label: 'Occupancy',\n//     minWidth: 170,\n//     align: 'right',\n//     format: (value: number) => value.toFixed(2),\n//   },\n// ];\nfunction createData(name, type, capacity, vacancy, occupancy) {\n  return {\n    name,\n    type,\n    capacity,\n    vacancy,\n    occupancy\n  };\n}\n\nconst rows = [createData('Amsterdam', 'First Class', 100, 30, 70), createData('Athens', 'Deluxe', 100, 30, 70), createData('Hong Kong', 'Deluxe', 100, 30, 70), createData('Rio', 'Deluxe', 100, 30, 70), createData('Paris', 'Deluxe', 100, 30, 70), createData('Sydney', 'First Class', 100, 30, 70), createData('Auckland', 'First Class', 100, 30, 70), createData('Seoul', 'Deluxe', 100, 30, 70), createData('Tokyo', 'Deluxe', 100, 30, 70), createData('Kyoto', 'Deluxe', 100, 30, 70), createData('New York', 'First Class', 100, 30, 70), createData('Singapore', 'Deluxe', 100, 30, 70), createData('London', 'Deluxe', 100, 30, 70)];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    minHeight: 600\n  }\n});\nexport default function table(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return __jsx(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, columns.map(column => __jsx(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, column.label)))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 23\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/isaac/Desktop/PHP PROJECTS/Laravel-React-Next/Frontend/reactapp/src/components/table.tsx"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","createData","name","type","capacity","vacancy","occupancy","rows","useStyles","root","width","container","minHeight","table","props","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","columns","map","column","id","align","minWidth","label","slice","row","format","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {ITable, IBuilding} from '../interface/Interfaces'\n\n// interface Column {\n  \n//   id: number;\n//   label: string;\n//   minWidth?: number;\n//   align?: 'right';\n//   format?: (value: number) => string;\n// }\n\n// const columns: Column[] = [\n//   { id: 1, label: 'Name', minWidth: 170 },\n//   { id: 2, label: 'Type', minWidth: 100 },\n//   {\n//     id: 3,\n//     label: 'Capacity',\n//     minWidth: 170,\n//     align: 'right',\n//     format: (value: number) => value.toLocaleString('en-US'),\n//   },\n//   {\n//     id: 4,\n//     label: 'Vacancy',\n//     minWidth: 170,\n//     align: 'right',\n//     format: (value: number) => value.toLocaleString('en-US'),\n//   },\n//   {\n//     id: 5,\n//     label: 'Occupancy',\n//     minWidth: 170,\n//     align: 'right',\n//     format: (value: number) => value.toFixed(2),\n//   },\n// ];\n\nfunction createData(name: string, type: string, capacity: number, vacancy: number, occupancy: number): IBuilding {\n  return { name, type, capacity, vacancy, occupancy };\n}\n\nconst rows = [\n  createData('Amsterdam','First Class', 100,30,70),\n  createData('Athens','Deluxe', 100,30,70),\n  createData('Hong Kong','Deluxe', 100,30,70),\n  createData('Rio','Deluxe', 100,30,70),\n  createData('Paris','Deluxe', 100,30,70),\n  createData('Sydney','First Class', 100,30,70),\n  createData('Auckland','First Class', 100,30,70),\n  createData('Seoul','Deluxe', 100,30,70),\n  createData('Tokyo','Deluxe', 100,30,70),\n  createData('Kyoto','Deluxe', 100,30,70),\n  createData('New York','First Class', 100,30,70),\n  createData('Singapore','Deluxe', 100,30,70),\n  createData('London','Deluxe', 100,30,70),\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    minHeight: 600,\n  },\n});\n\nexport default function table(props: ITable) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}